import cv2
import numpy as np

# Create a VideoCapture object
video_path = r'C:\Users\91940\Downloads\Car_video2.mp4'  # Update with your video file path
cap = cv2.VideoCapture(video_path)

# Check if the video capture is successful
if not cap.isOpened():
    print("Error opening video file.")
    exit()

# Function to process each frame
def process_frame(frame):
    # Convert the frame to grayscale
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Apply Gaussian blur to reduce noise
    gray = cv2.GaussianBlur(gray, (5, 5), 0)

    # Perform edge detection
    edges = cv2.Canny(gray, 50, 150)

    # Find contours in the edge image
    contours, _ = cv2.findContours(edges.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    # Filter contours based on area and aspect ratio (adjust these parameters)
    min_area = 500
    min_aspect_ratio = 2

    for contour in contours:
        if cv2.contourArea(contour) > min_area:
            x, y, w, h = cv2.boundingRect(contour)
            aspect_ratio = w / h

            if aspect_ratio > min_aspect_ratio:
                cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)

    return frame

# Process each frame in the video
while True:
    ret, frame = cap.read()

    # Check if the frame is successfully read
    if not ret:
        print("Error reading frame.")
        break

    # Process the frame
    processed_frame = process_frame(frame)

    # Display the frame with detected license plates
    cv2.imshow('License Plate Detection', processed_frame)

    # Break the loop if 'q' is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the VideoCapture and close all windows
cap.release()
cv2.destroyAllWindows()
